include: 'conf.sk'

#input: "LMO_BASALE_replicates.tsv", "LMX_BASALE_replicates.tsv", "LMH_replicates.tsv"
rule all_get_replicates:
    input: expand('{sclass}_replicates_pruned.tsv', sclass=CLASSES)

rule get_replicates:
    input: metadata=MEDA
    output: replicates='{sclass}_replicates.tsv'
    script: SRC_DIR+'/Genealogy_Replicates.R'

rule replicates_correlation:
    input: metadata=MEDA, replicates='{sclass}_replicates.tsv', expr=VSD
    output: replicates_correlation='{sclass}_replicates_correlation.tsv', 
            summary='{sclass}_replicates_summary.txt'
    script: SRC_DIR+'/Genealogy_VSD_correlation.R'

rule list_of_replicated_samples:
    input: '{sclass}_replicates_pruned.tsv'
    output: '{sclass}_replicates_samples.tsv'
    shell:
        """
            sed 1d {input} | cut -f 4 | tr "," "\\n" > {output}
        """

rule mean_btw_genealogy:
    input: metadata=MEDA, replicates='{sclass}_replicates_pruned.tsv', expr=VSD
    output: mean_btw_genealogy = '{sclass}_mean_gene_genealogy.tsv'
    script: SRC_DIR+'/mean_gene_genealogy.R' 


# We need to add back the expression of samples without replicates
# We know that genes are in the same order so we can simply cat the two files
#egrassi@godot:/mnt/trcanmed/snaketree/prj/biobanca/dataset/V1/trans_sign/expr$ head -n1  LMX_BASALE_mean_gene_genealogy.tsv | tr "\t" "\n" > genes_r
#egrassi@godot:/mnt/trcanmed/snaketree/prj/biobanca/dataset/V1/trans_sign/expr$ zcat  /mnt/trcanmed/snaketree/prj/DE_RNASeq/dataset/Biodiversa_up5_starOK_selected/vsd.tsv.gz | cut -f 1 | sed 1d > genes_h
#wc -l genesegrassi@godot:/mnt/trcanmed/snaketree/prj/biobanca/dataset/V1/trans_sign/expr$ wc -l genes_?
# 33667 genes_h
# 33667 genes_r
# 67334 total
#egrassi@godot:/mnt/trcanmed/snaketree/prj/biobanca/dataset/V1/trans_sign/expr$ diff -q genes_h  genes_r ; echo $?
#0
# TODO add rule that does this check to sleep without issues in the future.
rule add_no_replicates:
    input: metadata=MEDA, expr=VSD, mean_expr='LMX_BASALE_mean_gene_genealogy.tsv', repli='LMX_BASALE_replicates_samples.tsv'
    output: 'LMX_BASALE_mean_gene_genealogyall.tsv.gz'
    params: sclass="LMX_BASALE"
    shell:
        """
            sed 1d {input.metadata} | grep -w {params.sclass} | cut -f 1 | filter_1col -v 1 {input.repli} > {output}.tmp
            cat {input.mean_expr} > {output}.tmp2
            zcat {input.expr} | bawk 'NR==1{{print 'Gene',$0}} NR!=1{{print $0}}' | transpose | sed 1d | \
            filter_1col 1 {output}.tmp | bawk '{{M=substr($1,0,7);$1="";print M,$0}}' | cut -f 2 --complement >> {output}.tmp2
            gzip -c {output}.tmp2 > {output}
            rm {output}.tmp*
        """

# thr3_correlations_rsquared.tsv
# thr4 ...
# add wildcard to outfile and out_dir
# add parameter to Correlations_LMO_LMX-v2 to get the threshold ({wildcards.thr})
rule correlation_LMO_LMX:
    input: lmx='LMX_BASALE_mean_gene_genealogyall.tsv.gz',
           lmo='LMO_BASALE_mean_gene_genealogyall.tsv.gz'
    output: outfile = "correlations_rsquared.tsv", outfile2 = "res.tsv", out_dir=directory('plot_residuals')
    params: tool=BIN_DIR+"/Correlation_LMO_LMX-v2"
    shell:
        """
            rm -rf {output.out_dir}
            mkdir {output.out_dir}
            {params.tool} -x {input.lmx} -o {input.lmo} -r {output.outfile} -d {output.out_dir} -m {output.outfile2}
        """

rule correlation_LMX_LMO_simo:
    input: simo=SIMOUNIQ, expr=VSD, metadata=MEDA, right=RIGHT
    params: tool=BIN_DIR+"/Correlation_LMX-LMO_SimoCoupled"
    output: outfile = "LMX-LMO_correlation_simo.tsv.gz"
    shell:
        """
            {params.tool} -s {input.simo} -v {input.expr} -m {input.metadata} -r {input.right} -o {output.outfile}
        """

rule pheatmap:
    input: correlation_matrix="LMX-LMO_correlation_simo.tsv.gz"
    output: pheatmap="pheatmap_correlation.png"
    script: SRC_DIR+'/pheatmap.R'

rule obtain_density_plot_wilcox:
    input: res="res.tsv"
    output: density_plot = "density_f.pdf", wilcox_result ="wilcox"
    script: SRC_DIR+'/matched_unmatched_plot_wilcox.R'


### Study genes with high studentized residuals in correlations
rule threshold_residual:
    input: "plot_residuals"
    output: "genes_occurrence_overthr-{thr}.tsv"
    shell:
        """
            cat {input}/*tsv | grep -v -w residuals | bawk '$2 > {wildcards.thr} || $2 < -{wildcards.thr} {{print $1}}' | sed 's/^H_//1' > {output}
        """

rule universe_residual:
    input: "plot_residuals"
    output: "genes_residuals_universe.tsv"
    shell:
        """
            cat {input}/*tsv | grep -v -w residuals | cut -f1 | sed 's/^H_//1' | sort | uniq > {output}
        """
rule gene_residuals_plots:
    input: residuals = "genes_occurrence_overthr-{thr}.tsv"
    output: gene_plot = "gene_res-{thr}.pdf", gene_plot_zoom = "gen_res_zoom-{thr}.pdf", gene_res_freq = "gene_residual_frequency-{thr}.tsv"
    script: SRC_DIR+'/Gene_residual_plots.R'
    
